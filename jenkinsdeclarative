pipeline 
{

    agent any
    tools{
        maven "maven3.8.4"
}
    triggers {
  pollSCM '* * * * *'
}
options {
    //last 5 no of builds stored
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '5')
}
//adding the timestamp to the console outpuT
 {
  timestamps()
}

stages{
     
     
//checkout Code Stage
stage('CheckoutCode')
{    
 
     steps{
         sendSlackNotification('STARTED')
         git branch: 'development', credentialsId: '0d02a882-4ce2-48e4-8c5f-29b881398653', url: 'https://github.com/omg07345/maven-web-application.git'
}
 
}
//Build Stage
stage('Build')
{
steps{
sh "mvn clean package"
    }
    }

//Execute SonarQube Report
stage('ExecuteSonarQubeReport'){
    steps{
        sh "mvn sonar:sonar"
}
}

//Upload artifacts into artifactory repo
stage('UploadIntoNexus')
{
    steps{
        sh "mvn deploy"
    }
}
        stage('DeployIntoTomcatServer'){
            steps{
                   sshagent(['e2a46be3-be78-4707-801e-3ef28d8b48ea']) {
    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.4.43:/opt/apache-tomcat-9.0.63/webapps"
}
            
        
}
}

 
}//Stages closing
post {
  success {
    sendSlackNotification('SUCCESS')
  }
  failure {
    sendSlackNotification('FAILURE')
  }
}


}//Pipeline closing



//below code for slack notification

def sendSlackNotification(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary,channel: 'walmart')
}
