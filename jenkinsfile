@Library('sharedlibsom')
node('nodes'){

    
def mavenHome = tool name: "maven3.8.4"

properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])

echo "job name is: ${env.JOB_NAME}"
echo "node name is: ${env.NODE_NAME}"
echo "Build number is: ${env.BUILD_NUMBER}"

trythis{
sendslackNotification('STARTED')
}

stage('CheckoutCode')
{
git branch: 'development', credentialsId: '0d02a882-4ce2-48e4-8c5f-29b881398653', url: 'https://github.com/omg07345/maven-web-application.git'
}

stage('Build')
{
sh "${mavenHome}/bin/mvn clean package"
}
stage('TriggerDownstreamJob'){
build job: 'pipelinebuildwithparameters'
}

/*
stage('ExecuteSonarQubeReport')
{
sh "${mavenHome}/bin/mvn sonar:sonar"
}

stage('UploadArtifactsIntoNexus')
{
    
sh "${mavenHome}/bin/mvn deploy"
}

stage('DeployAPPintotomcatserver')
{
sshagent(['e2a46be3-be78-4707-801e-3ef28d8b48ea']) {
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.4.43:/opt/apache-tomcat-9.0.63/webapps"  


}
}
*/

{(e)
currentBuild.result="FAILED"
throw e
}

notify{
sendSlackNotification(currentBuild.result)
}
}//Node Closing

//below code for slack notification
/*
def sendSlackNotification(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
*/
